{"version":3,"sources":["components/firebase.js","components/Nav.js","components/Header.js","components/Main.js","components/LandingPage.js","components/Bio.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","Nav","signOut","state","auth","onAuthStateChanged","user","console","log","setState","window","location","reload","className","src","alt","to","onClick","this","Component","Header","uploadProfileImage","e","profileImageUploaded","profileImage","target","files","upload","uploadGallery","type","includes","galleryVideo","uploadVideo","galleryImageUploaded","galleryImage","imageToUpload","uniqueId","database","collection","doc","id","storage","ref","props","uid","put","on","snapshot","progress","Math","round","bytesTransferred","totalBytes","error","child","getDownloadURL","then","url","userUploadedImageToDisplay","videoToUpload","firestore","htmlFor","onChange","email","userImages","length","style","width","Main","enlargeImage","parentNode","classList","toggle","map","image","i","key","tabIndex","deleteImage","LandingPage","signIn","preventDefault","signInEmail","current","value","password","signInPassword","signInWithEmailAndPassword","catch","errorMessage","message","alert","userInfo","signUp","signUpEmail","signUpPassword","createUserWithEmailAndPassword","signUpButtonClicked","signUpPopUp","React","createRef","onSubmit","Bio","setBio","title","bio","set","deleteBio","confirm","onSnapshot","filteredBios","userBios","filter","delete","docChanges","forEach","change","unshift","data","App","userDeletedImage","childNodes","currentSrc","filteredUserImages","refFromURL","userUploadedImagesToDisplay","listAll","res","items","item","push","path","exact","render","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0a5aee81.chunk.js","sourcesContent":["import firebase from \"firebase\";\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyCbwADKsJszQWH_OC62oCd7h8tUiTeOnRo\",\n    authDomain: \"instagram-project-d291e.firebaseapp.com\",\n    databaseURL: \"https://instagram-project-d291e.firebaseio.com\",\n    projectId: \"instagram-project-d291e\",\n    storageBucket: \"instagram-project-d291e.appspot.com\",\n    messagingSenderId: \"333813161472\",\n    appId: \"1:333813161472:web:b9ab0db66694c2c63602e5\",\n    measurementId: \"G-WFWDFCLCE2\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nexport default firebase;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport firebase from \"./firebase\";\n\nclass Nav extends Component {\n    constructor() {\n        super();\n        this.state = {\n            auth: firebase.auth(),\n        };\n    }\n\n    signOut = () => {\n        this.state.auth.signOut();\n\n        this.state.auth.onAuthStateChanged(user => {\n            console.log(user)\n            if (user) {\n            } else {\n                this.setState({\n                    user: null,\n                })\n                window.location.reload(false)\n            }\n        })\n    }\n\n    render() {\n        return (\n            <nav>\n                <div className=\"wrapper\">\n                    <div className=\"navLogo\">\n                        <img src=\"https://firebasestorage.googleapis.com/v0/b/project-five-97681.appspot.com/o/Z6fwRPBHhyVDwn8eFKzGX0eUQk13-favourite-images%2FJRr5JCPzDzVRYx1OPeUl?alt=media&token=72dacc8e-57dc-40f5-ba10-2249c4e15244\" alt='logo'></img>\n                    </div>\n\n                    <Link to='/changmoSungReactProjectFive/'>Go back home</Link>\n\n                    <Link to='/changmoSungReactProjectFive/bio'>Go to bio</Link>\n                    \n                    <button onClick={this.signOut} className=\"signOut\">sign out</button>\n                </div>\n            </nav>\n        );\n    }\n}\n\nexport default Nav;\n","import React, { Component } from \"react\";\nimport firebase from \"./firebase\";\n\nclass Header extends Component {\n    constructor() {\n        super();\n        this.state = {\n            storage: firebase.storage(),\n            database: firebase.firestore(),\n            progress: 0,\n            profileImage: '',\n            galleryImage: '',\n            galleryVideo: '',\n            profileImageUploaded: false,\n            galleryImageUploaded: false,\n        };\n    }\n\n    uploadProfileImage = e => {\n        this.setState({\n            profileImageUploaded: true,\n            profileImage: e.target.files[0],\n        }, () => this.upload(this.state.profileImage))\n    }\n\n    uploadGallery = e => {\n        if (e.target.files[0].type.includes('video')) {\n            this.setState({\n                galleryVideo: e.target.files[0],\n            }, () => this.uploadVideo(this.state.galleryVideo))\n        } else {\n            this.setState({\n                galleryImageUploaded: true,\n                galleryImage: e.target.files[0],\n            }, () => this.upload(this.state.galleryImage))\n        }\n    }\n\n    upload = imageToUpload => {\n        const uniqueId = this.state.database.collection(\"uniqueId\").doc().id;\n\n        let uploadTask;\n        \n        uploadTask = this.state.storage.ref(this.state.profileImageUploaded ? `${this.props.user.uid}-profileImage/profileImage` : `${this.props.user.uid}-galleryImages/${uniqueId}`).put(imageToUpload)\n\n        uploadTask.on(\n            \"state_changed\",\n            snapshot => {\n                //progress\n                const progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\n                \n                this.setState({ progress });\n            },\n            error => {\n                //error\n                console.log(error)\n            },\n            () => {\n                //complete\n                this.state.storage\n                    .ref(this.state.profileImageUploaded ? `${this.props.user.uid}-profileImage` : `${this.props.user.uid}-galleryImages`)\n                    .child(this.state.profileImageUploaded ? 'profileImage' : uniqueId)\n                    .getDownloadURL()\n                    .then(url => {\n                        if(this.state.profileImageUploaded) {\n                            this.setState({\n                                profileImage: url,\n                                profileImageUploaded: false,\n                            })\n                        } else {\n                            this.props.userUploadedImageToDisplay(url);\n                            this.setState({ galleryImageUploaded: false })\n                        }\n                    })\n            }\n        );\n    };\n\n    uploadVideo = videoToUpload => {\n        console.log(videoToUpload)\n\n    }\n\n    render() {\n        return (\n            <header>\n                <div className=\"wrapper headerFlexContainer\">\n                    <div className=\"profileImage\">\n                        <img src={this.state.profileImage ? this.state.profileImage : this.props.profileImage} alt='profile'></img>\n\n                        <label htmlFor='profileImageUpload'>profile</label>\n                        <input id='profileImageUpload' type='file' onChange={this.uploadProfileImage}></input>\n                    </div>\n\n                    <div className=\"userInfo\">\n                        <h1>{this.props.user.email}</h1>\n\n                        <p>{this.props.userImages.length} posts</p>\n\n                        <label htmlFor='fileUpload'>UPLOAD</label>\n                        <input id='fileUpload' type=\"file\" onChange={this.uploadGallery}></input>\n\n                        <div className=\"progressBar\">\n                            <span style={{ width: `${this.state.progress}%` }}></span>\n                        </div>\n                    </div>\n                </div>\n            </header>\n        );\n    }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\n\nclass Main extends Component {\n    constructor() {\n        super();\n        this.state = {};\n    }\n\n    enlargeImage = e => {\n        const image = e.target.parentNode;\n\n        image.classList.toggle(\"enlarged\");\n    };\n\n    render() {\n        return (\n            <main className=\"gallery\">\n                <div className=\"wrapper\">\n                    {this.props.userImages.map((image, i) => {\n                        return (\n                            <div key={i} className=\"galleryImage\" tabIndex='0'>\n                                <img src={image} alt='user uploaded' onClick={this.enlargeImage}></img>\n                                <button onClick={this.props.deleteImage}>delete</button>\n                            </div>\n                        );\n                    })}\n                </div>\n            </main>\n        );\n    }\n}\n\nexport default Main;\n","import React, { Component } from \"react\";\nimport firebase from \"./firebase\";\n\nclass LandingPage extends Component {\n    constructor() {\n        super();\n        this.state = {\n            user: null,\n            signUpButtonClicked: false,\n            auth: firebase.auth(),\n            signInEmail: React.createRef(),\n            signInPassword: React.createRef(),\n            signUpEmail: React.createRef(),\n            signUpPassword: React.createRef(),\n        };\n    }\n\n    signIn = (e) => {\n        e.preventDefault();\n\n        const email = this.state.signInEmail.current.value;\n        const password = this.state.signInPassword.current.value;\n\n        const promise = this.state.auth.signInWithEmailAndPassword(email, password);\n\n        promise.catch(function (error) {\n            const errorMessage = error.message;\n            alert(errorMessage);\n        });\n\n        this.state.auth.onAuthStateChanged(user => {\n            if (user) {\n                this.setState({\n                    user,\n                }, () => {\n                        this.props.userInfo(user)\n                })\n            }\n        })\n    }\n\n    signUp = (e) => {\n        e.preventDefault();\n        \n        const email = this.state.signUpEmail.current.value;\n        const password = this.state.signUpPassword.current.value;\n\n        this.state.auth.createUserWithEmailAndPassword(email, password).catch(function (error) {\n            const errorMessage = error.message;\n\n            alert(errorMessage)\n        });\n\n        this.state.auth.onAuthStateChanged(user => {\n            this.setState({\n                user,\n                signUpButtonClicked: !this.state.signUpButtonClicked,\n            })\n        })\n    }\n\n    // -----------------------------//\n\n    signUpPopUp = () => {\n        this.setState({\n            signUpButtonClicked: !this.state.signUpButtonClicked,\n        })\n    }\n\n\n    render() {\n        return (\n            <div className='landingPage'>\n                <form className='signInForm' onSubmit={this.signIn}>\n                    <label htmlFor='signInEmail'>Email</label>\n                    <input ref={this.state.signInEmail} id='signInEmail' type='email'></input>\n\n                    <label htmlFor='signInPassword'>Password</label>\n                    <input ref={this.state.signInPassword} id='signInPassword' type='password'></input>\n\n                    <button>Login</button>\n                </form>\n\n\n                {this.state.signUpButtonClicked\n                ? \n                    <form onSubmit={this.signUp}>\n                        <label htmlFor='signUpEmail'>Email</label>\n                        <input ref={this.state.signUpEmail} id='signUpEmail' type='email'></input>\n\n                        <label htmlFor='signUpPassword'>Password</label>\n                        <input ref={this.state.signUpPassword} id='signUpPassword' type='password'></input>\n\n                        <button>Sign up</button>\n\n                        <span onClick={this.signUpPopUp}>X</span>\n                    </form>\n                : null}\n                \n                {!this.state.signUpButtonClicked ? <button onClick={this.signUpPopUp}>Sign up</button> : null}\n            </div>\n        );\n    }\n}\n\nexport default LandingPage;\n","import React, { Component } from 'react';\nimport firebase from \"./firebase\";\n\n\nclass Bio extends Component {\n    constructor() {\n        super();\n        this.state = {\n            database: firebase.firestore(),\n            title: React.createRef(),\n            bio: React.createRef(),\n            userBios: [],\n            auth: firebase.auth(),\n            user: null,\n        }\n    }\n\n    componentDidMount() {\n        this.state.auth.onAuthStateChanged((user) => {\n            if (user) {\n                this.setState({ \n                    user \n                }, () => {\n                    this.state.database.collection(this.state.user.uid).onSnapshot(snapshot => {\n                        const userBios = [...this.state.userBios];\n\n                        const changes = snapshot.docChanges();\n\n                        changes.forEach(change => {\n                            userBios.unshift(change.doc.data());\n                        });\n                        this.setState({ userBios });\n                    })\n                });\n            };\n        });\n    }\n\n    setBio = e => {\n        e.preventDefault();\n\n        const uniqueId = this.state.database.collection(this.state.user.uid).doc().id;\n\n        const title = this.state.title.current.value;\n\n        const bio = this.state.bio.current.value;\n\n        if(title && bio) {\n            this.state.database.collection(this.state.user.uid).doc(uniqueId).set({\n                title: title,\n                bio: bio,\n                id: uniqueId,\n            });\n        } else {\n            alert('please fill in the blank')\n        }\n\n        this.state.title.current.value = '';\n        this.state.bio.current.value = '';\n    }\n\n    deleteBio = (e) => {\n        const confirm = window.confirm('are you sure?');\n\n        if(confirm) {\n            const uniqueId = e.target.parentNode.id;\n    \n            this.state.database.collection(this.state.user.uid).onSnapshot(snapshot => {\n                const userBios = [...this.state.userBios];\n    \n                const filteredBios = userBios.filter(bio => bio.id !== uniqueId);\n    \n                this.setState({ userBios: filteredBios });\n            })\n    \n            this.state.database.collection(this.state.user.uid).doc(uniqueId).delete();\n        }\n    }\n\n    render() { \n        return (\n            <div className='bioSection'>\n                <form onSubmit={this.setBio} className='bioForm'>\n                    <label htmlFor='title'>Title</label>\n                    <input type='text' id='title' ref={this.state.title}></input>\n\n                    <label htmlFor='bio'>Bio</label>\n                    <input type='textarea' id='bio' ref={this.state.bio}></input>\n\n                    <button>add to bio</button>\n                </form>\n\n                <div className='bioContainer'>\n                    {this.state.userBios.map((bio, i) => {\n                        return (\n                            <div key={i} id={bio.id} className='bio'>\n                                <h3>{bio.title}</h3>\n\n                                <p>{bio.bio}</p>\n\n                                <button onClick={this.deleteBio}>Delete</button>\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n         );\n    }\n}\n \nexport default Bio;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport firebase from \"./components/firebase\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Nav from \"./components/Nav\";\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport LandingPage from \"./components/LandingPage\";\nimport Bio from './components/Bio';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      database: firebase.firestore(),\n      storage: firebase.storage(),\n      auth: firebase.auth(),\n      user: null,\n      userImages: [],\n      profileImage: null,\n      userUploadedImagesToDisplay: null,\n    };\n  }\n\n  componentDidMount() {\n    this.state.auth.onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({ user }, () => {\n          const userImages = [...this.state.userImages];\n\n          this.state.storage\n            .ref()\n            .child(`${this.state.user.uid}-galleryImages`)\n            .listAll()\n            .then(res => {\n              res.items.map(item => {\n                item.getDownloadURL().then(url => {\n                  userImages.push(url);\n\n                  this.setState({ userImages });\n                });\n              });\n            });\n\n          this.state.storage\n            .ref()\n            .child(`${this.state.user.uid}-profileImage`)\n            .listAll()\n            .then(res => {\n              res.items.map(item => {\n                item.getDownloadURL().then(url => {\n  \n                  this.setState({ profileImage: url });\n                });\n              });\n            });\n        });\n      };\n    });\n  };\n\n  userUploadedImageToDisplay = url => {\n    const userImages = [...this.state.userImages];\n\n    userImages.unshift(url);\n\n    this.setState({ userImages });\n  };\n\n  deleteImage = e => {\n    const confirm = window.confirm('are you sure?');\n\n    if(confirm) {\n      const userImages = [...this.state.userImages];\n  \n      const userDeletedImage = e.target.parentNode.childNodes[0].currentSrc;\n  \n      const filteredUserImages = userImages.filter(image =>\n        image !== userDeletedImage);\n  \n      this.setState({ userImages: filteredUserImages });\n  \n      this.state.storage.refFromURL(userDeletedImage).delete();\n    }\n  };\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <Nav />\n          <Route path='/changmoSungReactProjectFive' exact>\n            {this.state.user \n            ? \n              <div>\n                <Header\n                  user={this.state.user}\n                  userImages={this.state.userImages}\n                  profileImage={this.state.profileImage}\n                  userUploadedImageToDisplay={this.userUploadedImageToDisplay}\n                />\n\n                <Main\n                  userImages={this.state.userImages}\n                  deleteImage={this.deleteImage}\n                />\n              </div>\n            : \n              <LandingPage userInfo={this.userInfo} /> }\n          </Route>\n\n          <Route path='/changmoSungReactProjectFive/bio' render={() => <Bio ></Bio>} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n\n\n\n\n\n// add bio section that users can change\n\n// add personal info section e.g. email and phone number","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}