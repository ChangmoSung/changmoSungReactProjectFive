{"version":3,"sources":["components/firebase.js","components/userItems/UserInfo.js","components/Header.js","components/Links.js","components/userItems/UserImages.js","components/userItems/UserVideos.js","components/userItems/Journal.js","components/Main.js","components/landingPage/SignIn.js","components/landingPage/SignUp.js","components/landingPage/LandingPage.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","UserInfo","props","className","userEmail","id","type","onChange","uploadGallery","htmlFor","role","aria-label","ref","uploadEmoji","to","onClick","auth","signOut","window","location","reload","progressSpan","style","width","progress","Header","uploadProfileImage","e","target","files","includes","alert","setState","profileImageUploaded","profileImage","upload","state","galleryVideoUploaded","galleryVideo","galleryImageUploaded","galleryImage","imageToUpload","uniqueId","database","collection","doc","storage","user","uid","put","on","snapshot","Math","round","bytesTransferred","totalBytes","current","classList","add","error","child","getDownloadURL","then","url","userUploadedFile","setTimeout","remove","firestore","React","createRef","this","src","alt","email","Component","Links","highlightLink","keyCode","document","querySelector","dataset","icon","parentNode","data-icon","onKeyDown","UserImage","enlargeImage","toggle","userImages","map","image","i","key","tabIndex","deleteItem","UserVideos","userVideos","video","controls","Journal","setJournal","preventDefault","title","value","journal","set","deleteJournal","confirm","delete","filteredJournals","userJournals","filter","onAuthStateChanged","onSnapshot","docChanges","forEach","change","unshift","data","onSubmit","required","rows","Main","path","UserImages","SignIn","signIn","password","signInWithEmailAndPassword","catch","errorMessage","message","redirectUser","placeholder","SignUp","signUp","createUserWithEmailAndPassword","LandingPage","history","push","testMode","testModeEmail","testModePassword","component","App","stopPropagation","deletedItem","childNodes","getAttribute","userItems","refFromURL","filteredUserImages","filteredUserVideos","journals","listAll","res","Promise","all","items","item","urls","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.a0f9794e.chunk.js","sourcesContent":["import firebase from \"firebase\";\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyAUDhlHmbfFpfZ8M9bPD-zoobBCosu57w8\",\n    authDomain: \"react-project-3f54a.firebaseapp.com\",\n    databaseURL: \"https://react-project-3f54a.firebaseio.com\",\n    projectId: \"react-project-3f54a\",\n    storageBucket: \"react-project-3f54a.appspot.com\",\n    messagingSenderId: \"139563383386\",\n    appId: \"1:139563383386:web:53e78a4d1203490b723663\",\n    measurementId: \"G-NY657CJ2J2\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\n\nexport default firebase;","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nconst UserInfo = props => {\n    const signOut = () => {\n        props.auth.signOut();\n        \n        window.location.reload();\n    }\n\n    return (\n        <div className=\"userInfo\">\n            <h1>{props.userEmail}</h1>\n\n            <div className='uploadAndSignOutButtons'>\n                <input\n                    id=\"fileUpload\"\n                    type=\"file\"\n                    onChange={props.uploadGallery}\n                ></input>\n\n                <label htmlFor=\"fileUpload\">\n                    <span>upload</span>\n\n                    <span role='img' aria-label='heart emoji' ref={props.uploadEmoji} className='uploadEmoji'>😍</span>\n                </label>\n\n                <Link to='/changmoSungReactProjectFive/' className='signOutLink' onClick={signOut}>\n                    <span className='signOut'>sign out</span>\n                </Link>\n            </div>\n\n            <div className=\"progressBar\">\n                <span ref={props.progressSpan} style={{ width: `${props.progress}%` }}></span>\n            </div>\n        </div>\n    )\n}\n\nexport default UserInfo;","import React, { Component } from \"react\";\nimport firebase from \"./firebase\";\nimport UserInfo from './userItems/UserInfo';\n\nclass Header extends Component {\n    constructor() {\n        super();\n        this.state = {\n            storage: firebase.storage(),\n            database: firebase.firestore(),\n            auth: firebase.auth(),\n            progress: 0,\n            profileImage: null,\n            galleryImage: null,\n            galleryVideo: null,\n            profileImageUploaded: false,\n            galleryImageUploaded: false,\n            galleryVideoUploaded: false,\n            progressSpan: React.createRef(),\n            uploadEmoji: React.createRef(),\n        };\n    }\n\n    uploadProfileImage = e => {\n        if (e.target.files[0].type.includes('video')) {\n            alert('For profile, you can only upload image')\n        } else {\n            this.setState({\n                profileImageUploaded: true,\n                profileImage: e.target.files[0]\n            }, () => this.upload(this.state.profileImage));\n        }\n    };\n\n    uploadGallery = e => {\n        if (e.target.files[0].type.includes(\"video\")) {\n            this.setState({\n                galleryVideoUploaded: true,\n                galleryVideo: e.target.files[0]\n            }, () => this.upload(this.state.galleryVideo));\n        } else {\n            this.setState({\n                galleryImageUploaded: true,\n                galleryImage: e.target.files[0]\n            }, () => this.upload(this.state.galleryImage));\n        }\n    };\n\n    upload = imageToUpload => {\n        const uniqueId = this.state.database.collection(\"uniqueId\").doc().id;\n\n        let uploadTask;\n\n        uploadTask = this.state.storage\n            .ref(this.state.profileImageUploaded\n                        ? `${this.props.user.uid}/profileImage`\n                        : this.state.galleryImageUploaded\n                            ? `${this.props.user.uid}/${uniqueId}-galleryImage`\n                            : `${this.props.user.uid}/${uniqueId}-galleryVideo`\n            )\n            .put(imageToUpload);\n\n        uploadTask.on(\n            \"state_changed\",\n            snapshot => {\n                const progress = Math.round(\n                    (snapshot.bytesTransferred / snapshot.totalBytes) * 100);\n\n                this.setState({ progress });\n\n                this.state.progressSpan.current.classList.add('progress')\n\n                this.state.uploadEmoji.current.classList.add('emojiVisible')\n            },\n            error => {\n                alert(error);\n            },\n            () => {\n                this.state.storage\n                    .ref(this.state.profileImageUploaded\n                                ? `${this.props.user.uid}`\n                                : this.state.galleryImageUploaded\n                                    ? `${this.props.user.uid}`\n                                    : `${this.props.user.uid}`\n                    )\n                    .child(this.state.profileImageUploaded\n                                ? 'profileImage'\n                                : this.state.galleryImageUploaded\n                                    ? `${uniqueId}-galleryImage`\n                                    : `${uniqueId}-galleryVideo`\n                    )\n                    .getDownloadURL()\n                    .then(url => {\n                        if (this.state.profileImageUploaded) {\n                            this.setState({\n                                profileImage: this.state.profileImageUploaded ? url : null,\n                                profileImageUploaded: false,\n                            });\n                        } else {\n                            this.props.userUploadedFile(url, this.state.galleryImageUploaded);\n                            this.setState({\n                                galleryImageUploaded: false,\n                                galleryVideoUploaded: false,\n                            });\n                        }\n                    });\n\n                setTimeout(() => {\n                    this.state.uploadEmoji.current.classList.remove('emojiVisible')\n\n                    this.state.progressSpan.current.classList.remove('progress')\n                    this.setState({ progress: 0 })\n                }, 4000)\n            }\n        );\n    };\n\n    render() {\n        return (\n            <header>\n                <div className=\"wrapper headerFlexContainer\">\n                    <div className=\"profileImage\">\n                        <input\n                            id=\"profileImageUpload\"\n                            type=\"file\"\n                            onChange={this.uploadProfileImage}\n                        ></input>\n\n                        <label htmlFor=\"profileImageUpload\" \n                        className='uploadImageText'>\n                            {this.state.profileImage || this.props.profileImage\n                            ?\n                                <img\n                                    src={this.state.profileImage\n                                        ?\n                                        this.state.profileImage\n                                        :\n                                        this.props.profileImage}\n                                    alt='user profile'\n                                />\n                            :null}\n\n                            {!this.state.profileImage && !this.props.profileImage\n                            ? \n                                <span>click here for profile image!</span>\n                            :null}\n                        </label>\n                    </div>\n\n                    <UserInfo \n                        userEmail={this.props.user.email}\n                        progressSpan={this.state.progressSpan}\n                        progress={this.state.progress}\n                        uploadGallery={this.uploadGallery}\n                        uploadEmoji={this.state.uploadEmoji}\n                        auth={this.state.auth}\n                    />\n                </div>\n            </header>\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nconst Links = props => {\n    const highlightLink = e => {\n        if(e.keyCode === 13 || typeof e.keyCode !== 'number') {\n            document.querySelector('.highlight').classList.remove('highlight');\n    \n            if(e.target.dataset.icon === 'yes') {\n                e.target.parentNode.classList.add('highlight');\n            } else {\n                e.target.classList.add('highlight');\n            }\n        }\n    }\n\n    return (\n        <div className='links'>\n            <Link to={`/changmoSungReactProjectFive/${props.uid}`} className='highlight' onClick={highlightLink}>\n                <i className=\"far fa-image\" data-icon='yes' onKeyDown={highlightLink}></i>\n            </Link>\n\n            <Link to={`/changmoSungReactProjectFive/${props.uid}/video`} onClick={highlightLink}>\n                <i className=\"fas fa-video\" data-icon='yes' onKeyDown={highlightLink}></i>\n            </Link>\n\n            <Link to={`/changmoSungReactProjectFive/${props.uid}/journal`} onClick={highlightLink}>\n                <i className=\"fas fa-book\" data-icon='yes' onKeyDown={highlightLink}></i>\n            </Link>\n        </div>\n    )\n}\n\nexport default Links;","import React from 'react';\n\nconst UserImage = props => {\n    const enlargeImage = e => {\n        const image = e.target.parentNode;\n\n        image.classList.toggle(\"enlarged\");\n\n        if (e.keyCode === 13) {\n            const image = e.target;\n\n            image.classList.toggle(\"enlarged\");\n        }\n    };\n\n    return (\n        props.userImages.map((image, i) => {\n            return (\n                <li key={i} className=\"galleryImage\" onClick={enlargeImage} onKeyDown={enlargeImage} tabIndex='0'>\n                    <img\n                        src={image}\n                        alt=\"user uploaded item\"\n                    ></img>\n\n                    <span tabIndex='0' onKeyDown={props.deleteItem} onClick={props.deleteItem}>delete</span>\n                </li>\n            );\n        })\n    )\n}\n\nexport default UserImage;","import React from 'react';\n\nconst UserVideos = props => {\n    return (\n        props.userVideos.map((video, i) => {\n            return (\n                <li key={i} className=\"galleryImage\" tabIndex='0'>\n                    <video\n                        src={video}\n                        alt=\"user uploaded item\"\n                        controls=\"controls\"\n                    ></video>\n\n                    <span tabIndex='0' onKeyDown={props.deleteItem} onClick={props.deleteItem}>delete</span>\n                </li>\n            );\n        })\n    )\n}\n\nexport default UserVideos;","import React, { Component } from 'react';\nimport firebase from \"../firebase\";\n\nclass Journal extends Component {\n    constructor() {\n        super();\n        this.state = {\n            auth: firebase.auth(),\n            database: firebase.firestore(),\n            user: null,\n            userJournals: [],\n        }\n\n        this.title = React.createRef();\n        this.journal = React.createRef();\n    }\n\n    componentDidMount() {\n        this.state.auth.onAuthStateChanged((user) => {\n            if (user) {\n                this.setState({\n                    user\n                }, () => {\n                    this.state.database.collection(this.state.user.uid).onSnapshot(snapshot => {\n                        const userJournals = [...this.state.userJournals];\n\n                        const changes = snapshot.docChanges();\n\n                        changes.forEach(change => {\n                            userJournals.unshift(change.doc.data());\n                        });\n                        \n                        this.setState({ userJournals })\n                    })\n                });\n            };\n        });\n    }\n\n    setJournal = e => {\n        e.preventDefault();\n\n        const uniqueId = this.state.database.collection(this.state.user.uid).doc().id;\n\n        const title = this.title.current.value;\n\n        const journal = this.journal.current.value;\n\n        this.state.database.collection(this.state.user.uid).doc(uniqueId).set({\n            title: title,\n            journal: journal,\n            id: uniqueId,\n        });\n\n        this.title.current.value = '';\n        this.journal.current.value = '';\n    }\n\n    deleteJournal = e => {\n        const confirm = window.confirm('Are you sure you want to delete the bio?');\n\n        if (confirm) {\n            const uniqueId = e.target.parentNode.id;\n\n            this.state.database.collection(this.state.user.uid).doc(uniqueId).delete().then(() => {\n                const userJournals = [...this.state.userJournals];\n\n                const filteredJournals = userJournals.filter(journal => journal.id !== uniqueId);\n                \n                this.setState({ userJournals: filteredJournals });\n            })\n        }\n    }\n\n    render() {\n        return (\n            <div className='journalSection'>\n                <form onSubmit={this.setJournal} className='journalForm'>\n                    <label htmlFor='title'>Title</label>\n                    <input type='text' id='title' ref={this.title} required></input>\n\n                    <label htmlFor='journal'>Journal</label>\n                    <textarea id='journal' ref={this.journal} rows='5' required></textarea>\n\n                    <button>add</button>\n                </form>\n\n                <div className='journalContainer'>\n                    {this.state.userJournals.map((journal, i) => {\n                        return (\n                            <div key={i} id={journal.id} className='journal'>\n                                <h3>{journal.title}</h3>\n\n                                <p>{journal.journal}</p>\n\n                                <button onClick={this.deleteJournal}>delete</button>\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Journal;","import React from 'react';\nimport { Switch, Route } from \"react-router-dom\";\nimport Links from './Links';\nimport UserImages from './userItems/UserImages';\nimport UserVideos from './userItems/UserVideos';\nimport Journal from \"./userItems/Journal\";\n\nconst Main = props => {\n  return (\n    <main className=\"gallery\">\n      <Links uid={props.uid} />\n\n      <ul className=\"wrapper\">\n        <Switch>\n          <Route path={`/changmoSungReactProjectFive/${props.uid}/journal`}>\n            <Journal />\n          </Route>\n\n          <Route path={`/changmoSungReactProjectFive/${props.uid}/video`}>\n            <UserVideos\n              userVideos={props.userVideos}\n              deleteItem={props.deleteItem}\n            />\n          </Route>\n\n          <Route path={`/changmoSungReactProjectFive/${props.uid}`}>\n            <UserImages\n              userImages={props.userImages}\n              deleteItem={props.deleteItem}\n            />\n          </Route>\n        </Switch>\n      </ul>\n    </main>\n  )\n}\n\nexport default Main;","import React, { Component } from 'react';\nimport firebase from \"../firebase\";\nimport { Link } from 'react-router-dom';\n\nclass SignIn extends Component {\n    constructor() {\n        super();\n        this.state = {\n            auth: firebase.auth(),\n        }\n    }\n\n    signIn = e => {\n        e.preventDefault();\n        const email = document.querySelector('#signInEmail').value;\n        const password = document.querySelector('#signInPassword').value;\n\n        const promise = this.state.auth.signInWithEmailAndPassword(email, password);\n\n        promise.catch(function (error) {\n            const errorMessage = error.message;\n            alert(errorMessage);\n\n            document.querySelector('#signInEmail').value = '';\n            document.querySelector('#signInPassword').value = '';\n        });\n\n        this.props.redirectUser();\n    }\n\n    render() { \n        return ( \n            <form className='signInForm' onSubmit={this.signIn}>\n                <label htmlFor='signInEmail'>email</label>\n                <input id='signInEmail' type='email' placeholder='email' required></input>\n\n                <label htmlFor='signInPassword'>password</label>\n                <input id='signInPassword' type='password' placeholder='password' required></input>\n\n                <div className='signInAndUpButtons'>\n                    <button>sign in</button>\n\n                    <Link to='/changmoSungReactProjectFive/signup'>sign up</Link>\n                </div>\n            </form>\n        );\n    }\n}\n \nexport default SignIn;","import React, { Component } from 'react';\nimport firebase from \"../firebase\";\nimport { Link } from 'react-router-dom';\n\nclass SignUp extends Component {\n    constructor() {\n        super();\n        this.state = {\n            auth: firebase.auth(),\n        }\n    }\n\n    signUp = e => {\n        e.preventDefault();\n\n        const email = document.querySelector('#signUpEmail').value;\n        const password = document.querySelector('#signUpPassword').value;\n\n        this.state.auth.createUserWithEmailAndPassword(email, password).catch(function (error) {\n            const errorMessage = error.message;\n            alert(errorMessage);\n\n            document.querySelector('#signUpEmail').value = '';\n            document.querySelector('#signUpPassword').value = '';\n        });\n\n        this.props.redirectUser();\n    }\n\n    render() { \n        return ( \n            <form className='signUpForm' onSubmit={this.signUp}>\n                <label htmlFor='signUpEmail'>email</label>\n                <input id='signUpEmail' type='email' placeholder='email' required></input>\n\n                <label htmlFor='signUpPassword'>password</label>\n                <input id='signUpPassword' type='password' placeholder='password' required></input>\n\n                <button className='signUpPageButton'>sign up</button>\n\n                <Link to='/changmoSungReactProjectFive/'>X</Link>\n            </form>\n         );\n    }\n}\n \nexport default SignUp;","import React, { Component } from \"react\";\nimport firebase from \"../firebase\";\nimport { Switch, Route } from 'react-router-dom';\nimport SignIn from './SignIn';\nimport SignUp from './SignUp';\n\nclass LandingPage extends Component {\n    constructor() {\n        super();\n        this.state = {\n            auth: firebase.auth(),\n            testModeEmail: 'changmosung0914@gmail.com',\n            testModePassword: 'hirechangmo',\n        };\n    }\n\n    redirectUser = () => {\n        this.state.auth.onAuthStateChanged(user => {\n            if (user) {\n                this.props.history.push(`/changmoSungReactProjectFive/${user.uid}`)\n            }\n        })\n    }\n\n    testMode = () => {\n        const email = this.state.testModeEmail;\n        const password = this.state.testModePassword;\n\n        const promise = this.state.auth.signInWithEmailAndPassword(email, password);\n\n        promise.catch(function (error) {\n            const errorMessage = error.message;\n\n            alert(errorMessage);\n        });\n\n        this.redirectUser();\n    }\n\n    render() {\n        return (\n            <div className='landingPage'>\n                <div className='testMode'>\n                    <h2>try this test mode!</h2>\n\n                    <button className='testModeButton' onClick={this.testMode}>test mode</button>\n                </div>\n\n                <Switch>\n                    <Route \n                        path='/changmoSungReactProjectFive/signup' \n                        component={() => <SignUp redirectUser={this.redirectUser}/>} \n                    />\n\n                    <Route \n                        path='/changmoSungReactProjectFive/' \n                        component={() => <SignIn signIn={this.signIn} redirectUser={this.redirectUser}/>}\n                    />\n                </Switch>\n\n            </div>\n        );\n    }\n}\n\nexport default LandingPage;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport firebase from \"./components/firebase\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport LandingPage from \"./components/landingPage/LandingPage\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      database: firebase.firestore(),\n      storage: firebase.storage(),\n      auth: firebase.auth(),\n      user: '',\n      userImages: [],\n      userVideos: [],\n      profileImage: null,\n      journals: [],\n    };\n  }\n\n\n  componentDidMount() {\n    this.state.auth.onAuthStateChanged(user => {\n      if (user) {\n        this.setState({ user }, () => {\n          this.state.storage\n            .ref()\n            .child(`${this.state.user.uid}`)\n            .listAll()\n            .then(res => {\n              Promise.all(\n                res.items.map(item => {\n                  return item.getDownloadURL();\n                })\n              ).then(urls => {\n                urls.forEach(url => {\n                  if (url.includes('galleryImage')) {\n                    const userImages = [...this.state.userImages];\n                    userImages.unshift(url);\n                    this.setState({ userImages });\n\n                  } else if (url.includes('galleryVideo')) {\n                    const userVideos = [...this.state.userVideos];\n                    userVideos.unshift(url);\n                    this.setState({ userVideos });\n\n                  } else {\n                    const profileImage = url;\n                    this.setState({ profileImage });\n                  };\n                });\n              });\n            });\n        });\n      };\n    });\n  };\n\n\n  userUploadedFile = (url, type) => {\n    if (type) {\n      const userImages = [...this.state.userImages];\n\n      userImages.unshift(url);\n\n      this.setState({ userImages });\n\n    } else {\n      const userVideos = [...this.state.userVideos];\n\n      userVideos.unshift(url);\n\n      this.setState({ userVideos });\n    };\n  };\n\n\n  deleteItem = e => {\n    e.stopPropagation();\n    \n    if (e.keyCode === 13 || typeof e.keyCode !== 'number') {\n      const confirm = window.confirm(\"Are you sure you want to delete the image?\");\n      const deletedItem = e.target.parentNode.childNodes[0].getAttribute('src');\n      const userItems = deletedItem.includes('galleryImage') ? [...this.state.userImages] : [...this.state.userVideos];\n\n      if (confirm) {\n        this.state.storage.refFromURL(deletedItem).delete();\n\n        if (deletedItem.includes('galleryImage')) {\n          const filteredUserImages = userItems.filter(image => image !== deletedItem);\n          this.setState({ userImages: filteredUserImages });\n\n        } else {\n          const filteredUserVideos = userItems.filter(video => video !== deletedItem);\n          this.setState({ userVideos: filteredUserVideos });\n        }\n      }\n    }\n  };\n\n\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route path={`/changmoSungReactProjectFive/${this.state.user.uid}`}>\n            <Header\n              user={this.state.user}\n              profileImage={this.state.profileImage}\n              userUploadedFile={this.userUploadedFile}\n            />\n\n            <Main\n              uid={this.state.user.uid}\n              userImages={this.state.userImages}\n              userVideos={this.state.userVideos}\n              deleteItem={this.deleteItem}\n            />\n          </Route>\n\n          <Route path=\"/changmoSungReactProjectFive/\" component={LandingPage}/>\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}