{"version":3,"sources":["components/firebase.js","components/Header.js","components/Nav.js","components/Bio.js","components/Main.js","components/LandingPage.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","Header","Component","uploadProfileImage","e","target","files","type","includes","alert","setState","profileImageUploaded","profileImage","upload","state","uploadGallery","galleryVideoUploaded","galleryVideo","galleryImageUploaded","galleryImage","imageToUpload","uniqueId","database","collection","doc","id","storage","ref","props","user","uid","put","on","snapshot","progress","Math","round","bytesTransferred","totalBytes","error","console","log","child","getDownloadURL","then","url","userUploadedImageToDisplay","userUploadedVideoToDisplay","signOut","auth","onAuthStateChanged","window","location","reload","firestore","className","htmlFor","src","this","alt","onChange","email","style","width","userImages","length","to","onClick","Bio","setBio","preventDefault","title","current","value","bio","set","deleteBio","confirm","parentNode","onSnapshot","filteredBios","userBios","filter","delete","React","createRef","docChanges","forEach","change","unshift","data","onSubmit","required","cols","map","i","key","Main","enlargeImage","classList","toggle","path","exact","image","tabIndex","deleteImage","userVideos","video","controls","deleteVideo","component","LandingPage","signIn","signInEmail","password","signInPassword","signInWithEmailAndPassword","catch","errorMessage","message","userInfo","signUp","signUpEmail","signUpPassword","createUserWithEmailAndPassword","signUpButtonClicked","signUpPopUp","App","userDeletedImage","childNodes","currentSrc","filteredUserImages","refFromURL","userDeletedVideo","filteredUserVideos","listAll","res","items","item","push","profileVideo","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a15707ea.chunk.js","sourcesContent":["import firebase from \"firebase\";\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyAUDhlHmbfFpfZ8M9bPD-zoobBCosu57w8\",\n    authDomain: \"react-project-3f54a.firebaseapp.com\",\n    databaseURL: \"https://react-project-3f54a.firebaseio.com\",\n    projectId: \"react-project-3f54a\",\n    storageBucket: \"react-project-3f54a.appspot.com\",\n    messagingSenderId: \"139563383386\",\n    appId: \"1:139563383386:web:53e78a4d1203490b723663\",\n    measurementId: \"G-NY657CJ2J2\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\n\nexport default firebase;","import React, { Component } from \"react\";\nimport firebase from \"./firebase\";\nimport { Link } from \"react-router-dom\";\n\nclass Header extends Component {\n    constructor() {\n        super();\n        this.state = {\n            storage: firebase.storage(),\n            database: firebase.firestore(),\n            auth: firebase.auth(),\n            progress: 0,\n            upload: false,\n            profileImage: null,\n            galleryImage: null,\n            galleryVideo: null,\n            profileImageUploaded: false,\n            galleryImageUploaded: false,\n            galleryVideoUploaded: false\n        };\n    }\n\n    uploadProfileImage = e => {\n        if(e.target.files[0].type.includes('video')) {\n            alert('For profile, you can only upload image')\n        } else {\n            this.setState({\n                profileImageUploaded: true,\n                profileImage: e.target.files[0]\n            },() => this.upload(this.state.profileImage));\n        }\n    };\n\n    uploadGallery = e => {\n        this.setState({\n            upload: true\n        });\n        if (e.target.files[0].type.includes(\"video\")) {\n        this.setState({\n            galleryVideoUploaded: true,\n            galleryVideo: e.target.files[0]\n            },() => this.upload(this.state.galleryVideo));\n        } else {\n        this.setState({\n            galleryImageUploaded: true,\n            galleryImage: e.target.files[0]\n            },() => this.upload(this.state.galleryImage));\n        }\n    };\n\n    upload = imageToUpload => {\n        const uniqueId = this.state.database.collection(\"uniqueId\").doc().id;\n\n        let uploadTask;\n\n        uploadTask = this.state.storage\n        .ref(\n            this.state.upload\n                ? this.state.galleryImageUploaded\n                    ? `${this.props.user.uid}-galleryImages/${uniqueId}`\n                    : `${this.props.user.uid}-galleryVideos/${uniqueId}`\n\n                : `${this.props.user.uid}-profileImage/profileImage`\n        )\n        .put(imageToUpload);\n\n        uploadTask.on(\n            \"state_changed\",\n            snapshot => {\n                //progress\n                const progress = Math.round(\n                (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n                );\n\n                this.setState({ progress });\n            },\n            error => {\n                //error\n                console.log(error);\n            },\n            () => {\n                //complete\n                this.state.storage\n                .ref(\n                    this.state.upload\n                    ? this.state.galleryImageUploaded\n                        ? `${this.props.user.uid}-galleryImages`\n                        : `${this.props.user.uid}-galleryVideos`\n\n                    : `${this.props.user.uid}-profileImage`\n                )\n                .child(\n                    this.state.upload\n                    ? this.state.galleryImageUploaded\n                        ? `${uniqueId}`\n                        : `${uniqueId}`\n                    : 'profileImage'\n                )\n                .getDownloadURL()\n                .then(url => {\n                    if (this.state.profileImageUploaded) {\n                    this.setState({\n                        profileImage: this.state.profileImageUploaded ? url : null,\n                        profileImageUploaded: false,\n                    });\n                    } else {\n                        if (this.state.galleryImageUploaded) {\n                            this.props.userUploadedImageToDisplay(url);\n                            this.setState({ galleryImageUploaded: false });\n                        } else {\n                            this.props.userUploadedVideoToDisplay(url);\n                            this.setState({ galleryVideoUploaded: false });\n                        }\n                    }\n                });\n            }\n        );\n    };\n\n    signOut = () => {\n        this.state.auth.signOut();\n\n        this.state.auth.onAuthStateChanged(user => {\n            console.log(user)\n            if (user) {\n            } else {\n                this.setState({\n                    user: null,\n                })\n                window.location.reload(false)\n            }\n        })\n    }\n\n  render() {\n    return (\n        <header>\n            <div className=\"wrapper headerFlexContainer\">\n                <div className=\"profileImage\">\n                    <label htmlFor=\"profileImageUpload\">\n                        <img\n                            src={this.state.profileImage ? this.state.profileImage : this.props.profileImage}\n                            alt=\"profile\"\n                        ></img>\n                    </label>\n                    <input\n                        id=\"profileImageUpload\"\n                        type=\"file\"\n                        onChange={this.uploadProfileImage}\n                    ></input> \n                </div>\n\n                <div className=\"userInfo\">\n                    <h1>{this.props.user.email}</h1>\n\n                    <div className=\"progressBar\">\n                        <span style={{ width: `${this.state.progress}%` }}></span>\n                    </div>\n\n                    <div className='uploadAndSignOutButtons'>\n                        <p>{this.props.userImages.length} posts</p>\n\n                        <label htmlFor=\"fileUpload\">upload</label>\n                        <input\n                            id=\"fileUpload\"\n                            type=\"file\"\n                            onChange={this.uploadGallery}\n                        ></input>\n\n                        <Link to='/changmoSungReactProjectFive/' onClick={this.signOut} className='signOut' >sign out</Link>\n                    </div>\n                </div>\n            </div>\n        </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport firebase from \"./firebase\";\n\nclass Nav extends Component {\n    constructor() {\n        super();\n        this.state = {\n            auth: firebase.auth(),\n        };\n    }\n\n    signOut = () => {\n        this.state.auth.signOut();\n\n        this.state.auth.onAuthStateChanged(user => {\n            console.log(user)\n            if (user) {\n            } else {\n                this.setState({\n                    user: null,\n                })\n                window.location.reload(false)\n            }\n        })\n    }\n\n    render() {\n        return (\n            <nav>\n                <div className=\"wrapper\">\n                    <div className=\"navLogo\">\n                        <img src=\"https://firebasestorage.googleapis.com/v0/b/project-five-97681.appspot.com/o/Z6fwRPBHhyVDwn8eFKzGX0eUQk13-favourite-images%2FJRr5JCPzDzVRYx1OPeUl?alt=media&token=72dacc8e-57dc-40f5-ba10-2249c4e15244\" alt='logo'></img>\n                    </div>\n\n                    <Link to='/changmoSungReactProjectFive/'>Go back home</Link>\n                    \n                    <button onClick={this.signOut} className=\"signOut\">sign out</button>\n                </div>\n            </nav>\n        );\n    }\n}\n\nexport default Nav;\n","import React, { Component } from 'react';\nimport firebase from \"./firebase\";\n\n\nclass Bio extends Component {\n    constructor() {\n        super();\n        this.state = {\n            auth: firebase.auth(),\n            database: firebase.firestore(),\n            user: null,\n            userBios: [],\n            title: React.createRef(),\n            bio: React.createRef(),\n        }\n    }\n\n    componentDidMount() {\n        this.state.auth.onAuthStateChanged((user) => {\n            if (user) {\n                this.setState({ \n                    user \n                }, () => {\n                    this.state.database.collection(this.state.user.uid).onSnapshot(snapshot => {\n                        const userBios = [...this.state.userBios];\n\n                        const changes = snapshot.docChanges();\n\n                        changes.forEach(change => {\n                            userBios.unshift(change.doc.data());\n                        });\n                        this.setState({ userBios });\n                    })\n                });\n            };\n        });\n    }\n\n    setBio = e => {\n        e.preventDefault();\n\n        const uniqueId = this.state.database.collection(this.state.user.uid).doc().id;\n\n        const title = this.state.title.current.value;\n\n        const bio = this.state.bio.current.value;\n\n        this.state.database.collection(this.state.user.uid).doc(uniqueId).set({\n            title: title,\n            bio: bio,\n            id: uniqueId,\n        });\n\n        this.state.title.current.value = '';\n        this.state.bio.current.value = '';\n    }\n\n    deleteBio = (e) => {\n        const confirm = window.confirm('are you sure?');\n\n        if(confirm) {\n            const uniqueId = e.target.parentNode.id;\n    \n            this.state.database.collection(this.state.user.uid).onSnapshot(snapshot => {\n                const userBios = [...this.state.userBios];\n    \n                const filteredBios = userBios.filter(bio => bio.id !== uniqueId);\n    \n                this.setState({ userBios: filteredBios });\n            })\n    \n            this.state.database.collection(this.state.user.uid).doc(uniqueId).delete();\n        }\n    }\n\n    render() { \n        return (\n            <div className='bioSection'>\n                <form onSubmit={this.setBio} className='bioForm'>\n                    <label htmlFor='title'>Title</label>\n                    <input type='text' id='title' ref={this.state.title} required></input>\n\n                    <label htmlFor='bio'>Bio</label>\n                    <input type='textarea' id='bio' ref={this.state.bio} cols='10' required></input>\n\n                    <button>add to bio</button>\n                </form>\n\n                <div className='bioContainer'>\n                    {this.state.userBios.map((bio, i) => {\n                        return (\n                            <div key={i} id={bio.id} className='bio'>\n                                <h3>{bio.title}</h3>\n\n                                <p>{bio.bio}</p>\n\n                                <button onClick={this.deleteBio}>Delete</button>\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n         );\n    }\n}\n \nexport default Bio;","import React, { Component } from \"react\";\nimport { Route, Link } from \"react-router-dom\";\nimport Bio from \"./Bio\";\n\nclass Main extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n  enlargeImage = e => {\n    const image = e.target.parentNode;\n\n    image.classList.toggle(\"enlarged\");\n  };\n\n  render() {\n    return (\n      <main className=\"gallery\">\n        <div className='links'>\n          <Link to=\"/changmoSungReactProjectFive/\"><i className=\"far fa-image\"></i></Link>\n          <Link to=\"/changmoSungReactProjectFive/video\"><i className=\"fas fa-video\"></i></Link>\n          <Link to='/changmoSungReactProjectFive/bio'><i className=\"fas fa-book\"></i></Link>\n        </div>\n        <ul className=\"wrapper\">\n\n          <Route path=\"/changmoSungReactProjectFive/\" exact>\n            {this.props.userImages.map((image, i) => {\n              return (\n                <li key={i} className=\"galleryImage\" tabIndex=\"0\">\n                  <img\n                    src={image}\n                    alt=\"user uploaded\"\n                    onClick={this.enlargeImage}\n                  ></img>\n\n                  <button onClick={this.props.deleteImage}>delete</button>\n                </li>\n              );\n            })}\n          </Route>\n\n          {/* fix deleting video functionality */}\n          <Route path=\"/changmoSungReactProjectFive/video\" exact>\n            {this.props.userVideos.map((video, i) => {\n              return (\n                <li key={i} className=\"galleryImage\" tabIndex=\"0\">\n                  <video\n                    src={video}\n                    alt=\"user uploaded\"\n                    controls=\"controls\"\n                    onClick={this.enlargeImage}\n                  ></video>\n\n                  <button onClick={this.props.deleteVideo}>delete</button>\n                </li>\n              );\n            })}\n          </Route>\n\n          <Route path=\"/changmoSungReactProjectFive/bio\" component={Bio} />\n\n        </ul>\n      </main>\n    );\n  }\n}\n\nexport default Main;\n","import React, { Component } from \"react\";\nimport firebase from \"./firebase\";\n\nclass LandingPage extends Component {\n    constructor() {\n        super();\n        this.state = {\n            user: null,\n            signUpButtonClicked: false,\n            auth: firebase.auth(),\n            signInEmail: React.createRef(),\n            signInPassword: React.createRef(),\n            signUpEmail: React.createRef(),\n            signUpPassword: React.createRef(),\n        };\n    }\n\n    signIn = (e) => {\n        e.preventDefault();\n\n        const email = this.state.signInEmail.current.value;\n        const password = this.state.signInPassword.current.value;\n\n        const promise = this.state.auth.signInWithEmailAndPassword(email, password);\n\n        promise.catch(function (error) {\n            const errorMessage = error.message;\n            alert(errorMessage);\n        });\n\n        this.state.auth.onAuthStateChanged(user => {\n            if (user) {\n                this.setState({\n                    user,\n                }, () => {\n                        this.props.userInfo(user)\n                })\n            }\n        })\n    }\n\n    signUp = (e) => {\n        e.preventDefault();\n        \n        const email = this.state.signUpEmail.current.value;\n        const password = this.state.signUpPassword.current.value;\n\n        this.state.auth.createUserWithEmailAndPassword(email, password).catch(function (error) {\n            const errorMessage = error.message;\n\n            alert(errorMessage)\n        });\n\n        this.state.auth.onAuthStateChanged(user => {\n            this.setState({\n                user,\n                signUpButtonClicked: !this.state.signUpButtonClicked,\n            })\n        })\n    }\n\n    signUpPopUp = () => {\n        this.setState({\n            signUpButtonClicked: !this.state.signUpButtonClicked,\n        })\n    }\n\n\n    render() {\n        return (\n            <div className='landingPage'>\n                <form className='signInForm' onSubmit={this.signIn}>\n                    <label htmlFor='signInEmail'>Email</label>\n                    <input ref={this.state.signInEmail} id='signInEmail' type='email'></input>\n\n                    <label htmlFor='signInPassword'>Password</label>\n                    <input ref={this.state.signInPassword} id='signInPassword' type='password'></input>\n\n                    <button>Login</button>\n                </form>\n\n\n                {this.state.signUpButtonClicked\n                ? \n                    <form onSubmit={this.signUp}>\n                        <label htmlFor='signUpEmail'>Email</label>\n                        <input ref={this.state.signUpEmail} id='signUpEmail' type='email'></input>\n\n                        <label htmlFor='signUpPassword'>Password</label>\n                        <input ref={this.state.signUpPassword} id='signUpPassword' type='password'></input>\n\n                        <button>Sign up</button>\n\n                        <span onClick={this.signUpPopUp}>X</span>\n                    </form>\n                : null}\n                \n                {!this.state.signUpButtonClicked ? <button onClick={this.signUpPopUp}>Sign up</button> : null}\n            </div>\n        );\n    }\n}\n\nexport default LandingPage;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport firebase from \"./components/firebase\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Nav from \"./components/Nav\";\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport LandingPage from \"./components/LandingPage\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      database: firebase.firestore(),\n      storage: firebase.storage(),\n      auth: firebase.auth(),\n      user: null,\n      userImages: [],\n      userVideos: [],\n      profileImage: null,\n    };\n  }\n\n  componentDidMount() {\n    this.state.auth.onAuthStateChanged(user => {\n      if (user) {\n        this.setState({ user }, () => {\n          const userImages = [...this.state.userImages];\n\n          const userVideos = [...this.state.userVideos];\n\n          this.state.storage\n            .ref()\n            .child(`${this.state.user.uid}-galleryImages`)\n            .listAll()\n            .then(res => {\n              res.items.map(item => {\n                item.getDownloadURL().then(url => {\n                  userImages.push(url);\n\n                  this.setState({ userImages });\n                });\n              });\n            });\n\n          this.state.storage\n            .ref()\n            .child(`${this.state.user.uid}-galleryVideos`)\n            .listAll()\n            .then(res => {\n              res.items.map(item => {\n                item.getDownloadURL().then(url => {\n                  userVideos.push(url);\n\n                  this.setState({ userVideos });\n                });\n              });\n            });\n\n          this.state.storage\n            .ref()\n            .child(`${this.state.user.uid}-profileImage`)\n            .listAll()\n            .then(res => {\n              res.items.map(item => {\n                item.getDownloadURL().then(url => {\n                  console.log(url)\n                  this.setState({ profileImage: url });\n                });\n              });\n            });\n        });\n      }\n    });\n  }\n\n  userUploadedImageToDisplay = url => {\n    const userImages = [...this.state.userImages];\n\n    userImages.unshift(url);\n\n    this.setState({ userImages });\n  };\n\n  userUploadedVideoToDisplay = url => {\n    const userVideos = [...this.state.userVideos];\n\n    userVideos.unshift(url);\n\n    this.setState({ userVideos });\n  };\n\n  deleteImage = e => {\n    const confirm = window.confirm(\"are you sure?\");\n\n    if (confirm) {\n      const userImages = [...this.state.userImages];\n\n      const userDeletedImage = e.target.parentNode.childNodes[0].currentSrc;\n\n      const filteredUserImages = userImages.filter(\n        image => image !== userDeletedImage\n      );\n\n      this.setState({ userImages: filteredUserImages });\n\n      this.state.storage.refFromURL(userDeletedImage).delete();\n    }\n  };\n\n  deleteVideo = e => {\n    const confirm = window.confirm(\"are you sure?\");\n\n    if (confirm) {\n      const userVideos = [...this.state.userVideos];\n\n      const userDeletedVideo = e.target.parentNode.childNodes[0].currentSrc;\n\n      const filteredUserVideos = userVideos.filter(\n        video => video !== userDeletedVideo\n      );\n\n      this.setState({ userVideos: filteredUserVideos });\n\n      this.state.storage.refFromURL(userDeletedVideo).delete();\n    }\n  };\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <Route path=\"/changmoSungReactProjectFive/\">\n            {this.state.user ? (\n              <div className='root'>\n                <Header\n                  user={this.state.user}\n                  userImages={this.state.userImages}\n                  profileImage={this.state.profileImage}\n                  profileVideo={this.state.profileVideo}\n                  userUploadedImageToDisplay={this.userUploadedImageToDisplay}\n                  userUploadedVideoToDisplay={this.userUploadedVideoToDisplay}\n                />\n\n                <Main\n                  userImages={this.state.userImages}\n                  userVideos={this.state.userVideos}\n                  deleteImage={this.deleteImage}\n                  deleteVideo={this.deleteVideo}\n                />\n              </div>\n            ) : (\n              <LandingPage userInfo={this.userInfo} />\n            )}\n          </Route>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}