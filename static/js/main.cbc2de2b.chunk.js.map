{"version":3,"sources":["components/firebase.js","components/Nav.js","components/Header.js","components/Main.js","components/LandingPage.js","components/Bio.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","Nav","signOut","state","auth","onAuthStateChanged","user","console","log","setState","window","location","reload","className","src","alt","to","onClick","this","Component","Header","uploadProfileImage","e","target","files","type","includes","profileVideoUploaded","profileVideo","upload","profileImageUploaded","profileImage","uploadGallery","galleryVideoUploaded","galleryVideo","galleryImageUploaded","galleryImage","imageToUpload","uniqueId","database","collection","doc","id","storage","ref","props","uid","put","on","snapshot","progress","Math","round","bytesTransferred","totalBytes","error","child","getDownloadURL","then","url","userUploadedImageToDisplay","userUploadedVideoToDisplay","firestore","htmlFor","onChange","email","userImages","length","style","width","Main","enlargeImage","parentNode","classList","toggle","userVideos","exact","path","map","image","i","key","tabIndex","deleteImage","video","controls","deleteVideo","LandingPage","signIn","preventDefault","signInEmail","current","value","password","signInPassword","signInWithEmailAndPassword","catch","errorMessage","message","alert","userInfo","signUp","signUpEmail","signUpPassword","createUserWithEmailAndPassword","signUpButtonClicked","signUpPopUp","React","createRef","onSubmit","Bio","setBio","title","bio","set","deleteBio","confirm","onSnapshot","filteredBios","userBios","filter","delete","docChanges","forEach","change","unshift","data","App","userDeletedImage","childNodes","currentSrc","filteredUserImages","refFromURL","userDeletedVideo","filteredUserVideos","listAll","res","items","item","push","render","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cbc2de2b.chunk.js","sourcesContent":["import firebase from \"firebase\";\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyCbwADKsJszQWH_OC62oCd7h8tUiTeOnRo\",\n    authDomain: \"instagram-project-d291e.firebaseapp.com\",\n    databaseURL: \"https://instagram-project-d291e.firebaseio.com\",\n    projectId: \"instagram-project-d291e\",\n    storageBucket: \"instagram-project-d291e.appspot.com\",\n    messagingSenderId: \"333813161472\",\n    appId: \"1:333813161472:web:b9ab0db66694c2c63602e5\",\n    measurementId: \"G-WFWDFCLCE2\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nexport default firebase;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport firebase from \"./firebase\";\n\nclass Nav extends Component {\n    constructor() {\n        super();\n        this.state = {\n            auth: firebase.auth(),\n        };\n    }\n\n    signOut = () => {\n        this.state.auth.signOut();\n\n        this.state.auth.onAuthStateChanged(user => {\n            console.log(user)\n            if (user) {\n            } else {\n                this.setState({\n                    user: null,\n                })\n                window.location.reload(false)\n            }\n        })\n    }\n\n    render() {\n        return (\n            <nav>\n                <div className=\"wrapper\">\n                    <div className=\"navLogo\">\n                        <img src=\"https://firebasestorage.googleapis.com/v0/b/project-five-97681.appspot.com/o/Z6fwRPBHhyVDwn8eFKzGX0eUQk13-favourite-images%2FJRr5JCPzDzVRYx1OPeUl?alt=media&token=72dacc8e-57dc-40f5-ba10-2249c4e15244\" alt='logo'></img>\n                    </div>\n\n                    <Link to='/changmoSungReactProjectFive/'>Go back home</Link>\n\n                    <Link to='/changmoSungReactProjectFive/bio'>Go to bio</Link>\n                    \n                    <button onClick={this.signOut} className=\"signOut\">sign out</button>\n                </div>\n            </nav>\n        );\n    }\n}\n\nexport default Nav;\n","import React, { Component } from \"react\";\nimport firebase from \"./firebase\";\n\nclass Header extends Component {\n    constructor() {\n        super();\n        this.state = {\n            storage: firebase.storage(),\n            database: firebase.firestore(),\n            progress: 0,\n            upload: false,\n            profileImage: null,\n            profileVideo: null,\n            galleryImage: null,\n            galleryVideo: null,\n            profileImageUploaded: false,\n            profileVideoUploaded: false,\n            galleryImageUploaded: false,\n            galleryVideoUploaded: false,\n        };\n    }\n\n    uploadProfileImage = e => {\n        if (e.target.files[0].type.includes('video')) {\n            this.setState({\n                profileVideoUploaded: true,\n                profileVideo: e.target.files[0],\n            }, () => this.upload(this.state.profileVideo))\n        } else {\n            this.setState({\n                profileImageUploaded: true,\n                profileImage: e.target.files[0],\n            }, () => this.upload(this.state.profileImage))\n        }\n    }\n\n    uploadGallery = e => {\n        this.setState({\n            upload: true,\n        })\n        if (e.target.files[0].type.includes('video')) {\n            this.setState({\n                galleryVideoUploaded: true,\n                galleryVideo: e.target.files[0],\n            }, () => this.upload(this.state.galleryVideo))\n        } else {\n            this.setState({\n                galleryImageUploaded: true,\n                galleryImage: e.target.files[0],\n            }, () => this.upload(this.state.galleryImage))\n        }\n    }\n\n    upload = imageToUpload => {\n        const uniqueId = this.state.database.collection(\"uniqueId\").doc().id;\n\n        let uploadTask;\n        \n        uploadTask = this.state.storage\n            .ref(this.state.upload \n                ? this.state.galleryImageUploaded\n                    ? `${this.props.user.uid}-galleryImages/${uniqueId}`\n                    : `${this.props.user.uid}-galleryVideos/${uniqueId}`\n\n                : this.state.profileImageUploaded\n                    ? `${this.props.user.uid}-profileImage/profileImage`\n                    : `${this.props.user.uid}-profileVideo/profileVideo`\n                )\n            .put(imageToUpload)\n\n        uploadTask.on(\n            \"state_changed\",\n            snapshot => {\n                //progress\n                const progress = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\n                \n                this.setState({ progress });\n            },\n            error => {\n                //error\n                console.log(error)\n            },\n            () => {\n                //complete\n                this.state.storage\n                    .ref(this.state.upload\n                        ? this.state.galleryImageUploaded\n                            ? `${this.props.user.uid}-galleryImages`\n                            : `${this.props.user.uid}-galleryVideos`\n                        : this.state.profileImageUploaded\n                            ? `${this.props.user.uid}-profileImage`\n                            : `${this.props.user.uid}-profileVideo`\n                        )\n                    .child(this.state.upload\n                        ? this.state.galleryImageUploaded\n                            ? `${uniqueId}`\n                            :  `${uniqueId}`\n                        : this.state.profileImageUploaded\n                            ? 'profileImage'\n                            : 'profileVideo'\n                        )\n                    .getDownloadURL()\n                    .then(url => {\n                        if(this.state.profileImageUploaded || this.state.profileVideoUploaded) {\n                            this.setState({\n                                profileImage: this.state.profileImageUploaded ? url : null,\n                                profileImageUploaded: false,\n                                profileVideo: this.state.profileVideoUploaded ? url : null,\n                            })\n                        } else {\n                            if(this.state.galleryImageUploaded) {\n                                this.props.userUploadedImageToDisplay(url);\n                                this.setState({ galleryImageUploaded: false })\n                            } else {\n                                this.props.userUploadedVideoToDisplay(url);\n                                this.setState({ galleryVideoUploaded: false })\n                            }\n                        }\n                    })\n            }\n        );\n    };\n\n\n    render() {\n        return (\n            <header>\n                <div className=\"wrapper headerFlexContainer\">\n                    <div className=\"profileImage\">\n                        <img src={this.state.profileImage ? this.state.profileImage : this.props.profileImage} alt='profile'></img>\n\n                        <label htmlFor='profileImageUpload'>profile</label>\n                        <input id='profileImageUpload' type='file' onChange={this.uploadProfileImage}></input>\n                    </div>\n\n                    <div className=\"userInfo\">\n                        <h1>{this.props.user.email}</h1>\n\n                        <p>{this.props.userImages.length} posts</p>\n\n                        <label htmlFor='fileUpload'>UPLOAD</label>\n                        <input id='fileUpload' type=\"file\" onChange={this.uploadGallery}></input>\n\n                        <div className=\"progressBar\">\n                            <span style={{ width: `${this.state.progress}%` }}></span>\n                        </div>\n                    </div>\n                </div>\n            </header>\n        );\n    }\n}\n\nexport default Header;","import React, { Component } from \"react\";\nimport { Route, Link } from \"react-router-dom\";\n\nclass Main extends Component {\n    constructor() {\n        super();\n        this.state = {};\n    }\n\n    enlargeImage = e => {\n        const image = e.target.parentNode;\n\n        image.classList.toggle(\"enlarged\");\n    };\n\n    render() {\n        console.log(this.props.userVideos)\n        return (\n            <main className=\"gallery\">\n                <div className=\"wrapper\">\n                    <div>\n                        <Link to='/changmoSungReactProjectFive/' exact>image</Link> \n                        <Link to='/changmoSungReactProjectFive/videos' exact>video</Link>\n                    </div>\n\n                    <Route path='/changmoSungReactProjectFive/'>\n                        {this.props.userImages.map((image, i) => {\n                            return (\n                                <div key={i} className=\"galleryImage\" tabIndex='0'>\n                                    <img src={image} alt='user uploaded' onClick={this.enlargeImage}></img>\n                                    <button onClick={this.props.deleteImage}>delete</button>\n                                </div>\n                            );\n                        })}\n                    </Route>\n\n                    {/* fix deleting video functionality */}\n                    <Route path='/changmoSungReactProjectFive/videos'>\n                        {this.props.userVideos.map((video, i) => {\n                            return (\n                                <div key={i} className=\"galleryImage\" tabIndex='0'>\n                                    <video src={video} alt='user uploaded' controls='controls' onClick={this.enlargeImage}></video>\n                                    <button onClick={this.props.deleteVideo}>delete</button>\n                                </div>\n                            );\n                        })}\n                    </Route>\n                </div>\n            </main>\n        );\n    }\n}\n\nexport default Main;\n","import React, { Component } from \"react\";\nimport firebase from \"./firebase\";\n\nclass LandingPage extends Component {\n    constructor() {\n        super();\n        this.state = {\n            user: null,\n            signUpButtonClicked: false,\n            auth: firebase.auth(),\n            signInEmail: React.createRef(),\n            signInPassword: React.createRef(),\n            signUpEmail: React.createRef(),\n            signUpPassword: React.createRef(),\n        };\n    }\n\n    signIn = (e) => {\n        e.preventDefault();\n\n        const email = this.state.signInEmail.current.value;\n        const password = this.state.signInPassword.current.value;\n\n        const promise = this.state.auth.signInWithEmailAndPassword(email, password);\n\n        promise.catch(function (error) {\n            const errorMessage = error.message;\n            alert(errorMessage);\n        });\n\n        this.state.auth.onAuthStateChanged(user => {\n            if (user) {\n                this.setState({\n                    user,\n                }, () => {\n                        this.props.userInfo(user)\n                })\n            }\n        })\n    }\n\n    signUp = (e) => {\n        e.preventDefault();\n        \n        const email = this.state.signUpEmail.current.value;\n        const password = this.state.signUpPassword.current.value;\n\n        this.state.auth.createUserWithEmailAndPassword(email, password).catch(function (error) {\n            const errorMessage = error.message;\n\n            alert(errorMessage)\n        });\n\n        this.state.auth.onAuthStateChanged(user => {\n            this.setState({\n                user,\n                signUpButtonClicked: !this.state.signUpButtonClicked,\n            })\n        })\n    }\n\n    // -----------------------------//\n\n    signUpPopUp = () => {\n        this.setState({\n            signUpButtonClicked: !this.state.signUpButtonClicked,\n        })\n    }\n\n\n    render() {\n        return (\n            <div className='landingPage'>\n                <form className='signInForm' onSubmit={this.signIn}>\n                    <label htmlFor='signInEmail'>Email</label>\n                    <input ref={this.state.signInEmail} id='signInEmail' type='email'></input>\n\n                    <label htmlFor='signInPassword'>Password</label>\n                    <input ref={this.state.signInPassword} id='signInPassword' type='password'></input>\n\n                    <button>Login</button>\n                </form>\n\n\n                {this.state.signUpButtonClicked\n                ? \n                    <form onSubmit={this.signUp}>\n                        <label htmlFor='signUpEmail'>Email</label>\n                        <input ref={this.state.signUpEmail} id='signUpEmail' type='email'></input>\n\n                        <label htmlFor='signUpPassword'>Password</label>\n                        <input ref={this.state.signUpPassword} id='signUpPassword' type='password'></input>\n\n                        <button>Sign up</button>\n\n                        <span onClick={this.signUpPopUp}>X</span>\n                    </form>\n                : null}\n                \n                {!this.state.signUpButtonClicked ? <button onClick={this.signUpPopUp}>Sign up</button> : null}\n            </div>\n        );\n    }\n}\n\nexport default LandingPage;\n","import React, { Component } from 'react';\nimport firebase from \"./firebase\";\n\n\nclass Bio extends Component {\n    constructor() {\n        super();\n        this.state = {\n            database: firebase.firestore(),\n            title: React.createRef(),\n            bio: React.createRef(),\n            userBios: [],\n            auth: firebase.auth(),\n            user: null,\n        }\n    }\n\n    componentDidMount() {\n        this.state.auth.onAuthStateChanged((user) => {\n            if (user) {\n                this.setState({ \n                    user \n                }, () => {\n                    this.state.database.collection(this.state.user.uid).onSnapshot(snapshot => {\n                        const userBios = [...this.state.userBios];\n\n                        const changes = snapshot.docChanges();\n\n                        changes.forEach(change => {\n                            userBios.unshift(change.doc.data());\n                        });\n                        this.setState({ userBios });\n                    })\n                });\n            };\n        });\n    }\n\n    setBio = e => {\n        e.preventDefault();\n\n        const uniqueId = this.state.database.collection(this.state.user.uid).doc().id;\n\n        const title = this.state.title.current.value;\n\n        const bio = this.state.bio.current.value;\n\n        if(title && bio) {\n            this.state.database.collection(this.state.user.uid).doc(uniqueId).set({\n                title: title,\n                bio: bio,\n                id: uniqueId,\n            });\n        } else {\n            alert('please fill in the blank')\n        }\n\n        this.state.title.current.value = '';\n        this.state.bio.current.value = '';\n    }\n\n    deleteBio = (e) => {\n        const confirm = window.confirm('are you sure?');\n\n        if(confirm) {\n            const uniqueId = e.target.parentNode.id;\n    \n            this.state.database.collection(this.state.user.uid).onSnapshot(snapshot => {\n                const userBios = [...this.state.userBios];\n    \n                const filteredBios = userBios.filter(bio => bio.id !== uniqueId);\n    \n                this.setState({ userBios: filteredBios });\n            })\n    \n            this.state.database.collection(this.state.user.uid).doc(uniqueId).delete();\n        }\n    }\n\n    render() { \n        return (\n            <div className='bioSection'>\n                <form onSubmit={this.setBio} className='bioForm'>\n                    <label htmlFor='title'>Title</label>\n                    <input type='text' id='title' ref={this.state.title}></input>\n\n                    <label htmlFor='bio'>Bio</label>\n                    <input type='textarea' id='bio' ref={this.state.bio}></input>\n\n                    <button>add to bio</button>\n                </form>\n\n                <div className='bioContainer'>\n                    {this.state.userBios.map((bio, i) => {\n                        return (\n                            <div key={i} id={bio.id} className='bio'>\n                                <h3>{bio.title}</h3>\n\n                                <p>{bio.bio}</p>\n\n                                <button onClick={this.deleteBio}>Delete</button>\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n         );\n    }\n}\n \nexport default Bio;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport firebase from \"./components/firebase\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Nav from \"./components/Nav\";\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport LandingPage from \"./components/LandingPage\";\nimport Bio from './components/Bio';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      database: firebase.firestore(),\n      storage: firebase.storage(),\n      auth: firebase.auth(),\n      user: null,\n      userImages: [],\n      userVideos: [],\n      profileImage: null,\n      profileVideo: null,\n    };\n  }\n\n  componentDidMount() {\n    this.state.auth.onAuthStateChanged((user) => {\n      if (user) {\n        this.setState({ user }, () => {\n          const userImages = [...this.state.userImages];\n\n          const userVideos = [...this.state.userVideos];\n\n          this.state.storage\n            .ref()\n            .child(`${this.state.user.uid}-galleryImages`)\n            .listAll()\n            .then(res => {\n              res.items.map(item => {\n                item.getDownloadURL().then(url => {\n                  userImages.push(url);\n\n                  this.setState({ userImages });\n                });\n              });\n            });\n\n          this.state.storage\n            .ref()\n            .child(`${this.state.user.uid}-galleryVideos`)\n            .listAll()\n            .then(res => {\n              res.items.map(item => {\n                item.getDownloadURL().then(url => {\n                  userVideos.push(url);\n\n                  this.setState({ userVideos });\n                });\n              });\n            });\n\n          this.state.storage\n            .ref()\n            .child(`${this.state.user.uid}-profileImage`)\n            .listAll()\n            .then(res => {\n              res.items.map(item => {\n                item.getDownloadURL().then(url => {\n  \n                  this.setState({ profileImage: url });\n                });\n              });\n            });\n\n          this.state.storage\n            .ref()\n            .child(`${this.state.user.uid}-profileVideo`)\n            .listAll()\n            .then(res => {\n              res.items.map(item => {\n                item.getDownloadURL().then(url => {\n\n                  this.setState({ profileImage: url });\n                });\n              });\n            });\n        });\n      };\n    });\n  };\n\n  userUploadedImageToDisplay = url => {\n    const userImages = [...this.state.userImages];\n\n    userImages.unshift(url);\n\n    this.setState({ userImages });\n  };\n\n  userUploadedVideoToDisplay = url => {\n    console.log(url)\n    const userVideos = [...this.state.userVideos];\n\n    userVideos.unshift(url);\n\n    this.setState({ userVideos });\n  }\n\n  deleteImage = e => {\n    const confirm = window.confirm('are you sure?');\n\n    if(confirm) {\n      const userImages = [...this.state.userImages];\n  \n      const userDeletedImage = e.target.parentNode.childNodes[0].currentSrc;\n  \n      const filteredUserImages = userImages.filter(image =>\n        image !== userDeletedImage);\n  \n      this.setState({ userImages: filteredUserImages });\n  \n      this.state.storage.refFromURL(userDeletedImage).delete();\n    }\n  };\n\n  deleteVideo = e => {\n    const confirm = window.confirm('are you sure?');\n\n    if (confirm) {\n      const userVideos = [...this.state.userVideos];\n\n      const userDeletedVideo = e.target.parentNode.childNodes[0].currentSrc;\n\n      const filteredUserVideos = userVideos.filter(video =>\n        video !== userDeletedVideo);\n\n      this.setState({ userImages: filteredUserVideos });\n\n      this.state.storage.refFromURL(userDeletedVideo).delete();\n    }\n  };\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <Nav />\n          <Route path='/changmoSungReactProjectFive/'>\n            {this.state.user \n            ? \n              <div>\n                <Header\n                  user={this.state.user}\n                  userImages={this.state.userImages}\n                  profileImage={this.state.profileImage}\n                  userUploadedImageToDisplay={this.userUploadedImageToDisplay}\n                  userUploadedVideoToDisplay={this.userUploadedVideoToDisplay}\n                />\n                \n                <Main\n                  userImages={this.state.userImages}\n                  userVideos={this.state.userVideos}\n                  deleteImage={this.deleteImage}\n                  deleteVideo={this.deleteVideo}\n                />\n              </div>\n            : \n              <LandingPage userInfo={this.userInfo} /> }\n          </Route>\n\n          <Route path='/changmoSungReactProjectFive/bio' render={() => <Bio ></Bio>} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}